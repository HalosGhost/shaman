'\" t
.\" Manual page created with latex2man on Fri Jun 20 12:31:56 CDT 2014
.\" NOTE: This file is generated, DO NOT EDIT.
.de Vb
.ft CW
.nf
..
.de Ve
.ft R

.fi
..
.TH "STRFWEATHER" "2" "20 June 2014" "Fetch Weather Data " "Fetch Weather Data "
.SH NAME

strfweather
\- fetch weather data in native C 
.PP
.SH SYNOPSIS

#include <weather.h> 
.PP
size_t strfweather (char * dest_str, size_t max, const char * format, const struct weather * weather); 
.PP
.SH DESCRIPTION

The strfweather
function breaks down the weather struct according to the passed format and writes the result to dest_str to, at most, max bytes. 
.PP
The format specification is a null\-terminated char array (a string) which consists of any number of conversion specifiers (each beginning with a %) and normal text. 
Any non\-conversion specifier character will be copied verbatim to dest_str (including the null byte). 
Conversion specifiers, however, will be replaced with the unit they represent. 
A list of conversion specifiers and their results are below. 
.PP
.SH FORMAT

The following format specifiers are permitted: 
.PP
.Vb
%%    A literal percent sign

%a    Time of data receipt       (unixtime)

%b    Barometric pressure        (hectoPascals)

%c    Weather condition string

%C    Weather condition code

%d    Cloud coverage             (percent)

%h    Low temperature            (°F | °C)

%H    High temperature           (°F | °C)

%i    City ID number

%I    City name

%j    Country Code

%l    Latitude                   (degrees)

%L    Longitude                  (degrees)

%p    Precipitation              (in | mm)

%P    Relative humidity          (percent)

%s    Time of sunrise            (unixtime)

%S    Time of sunset             (unixtime)

%t    Current temperature        (°F | °C)

%T    Apparent temperature       (°F | °C)

%w    Sustained wind speed       (mph|kmph)

%W    Gusting wind speed         (mph|kmph)

%x    Wind heading               (degrees)

%X    Wind heading               (Cardinal / Ordinal direction)
.Ve
.PP
Since all non\-conversion specifiers are copied verbatim, escape sequences (e.g., \\n and \\r) are allowed. 
.PP
.SH RETURN VALUE

Should the whole string be copied to dest_str without truncating, strfweather
will return the number of bytes written (the length of dest_str). 
If, however, the output to dest_str should be truncated, strfweather
will return 0. 
.PP
.SH AUTHOR

Copyright (C)2012\-2013 Sam Stuewe
.br
License GPLv2: GPL version 2 \fBhttps://www.gnu.org/licenses/gpl\-2.0.html\fP
.br
This is free software: you are free to change and redistribute it. 
.br
There is NO WARRANTY, to the extent permitted by law. 
.PP
Feature requests, bug reports and other comments may be submitted via GitHub (\fBhttps://github.com/HalosGhost/shaman.git\fP)
or E\-mail (\fBhalosghost@archlinux.info\fP)
.PP
.SH SEE ALSO

\fIshaman\fP(1),
\fIlibowm\fP(2)
.PP
.\" NOTE: This file is generated, DO NOT EDIT.
